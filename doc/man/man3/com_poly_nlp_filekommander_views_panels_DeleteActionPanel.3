.TH "com.poly.nlp.filekommander.views.panels.DeleteActionPanel" 3 "Thu Dec 20 2012" "Version 0.001" "FileKommander" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.poly.nlp.filekommander.views.panels.DeleteActionPanel \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractFileFolderPanel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBacceptButtonClickAction\fP (ActionEvent e)"
.br
.ti -1c
.RI "void \fBupdatePanelData\fP (\fBGenericActionModel\fP \fBdeleteModel\fP)"
.br
.ti -1c
.RI "void \fBupdatePanelData\fP ()"
.br
.ti -1c
.RI "void \fBupdatePanelDataAfterAction\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBDeleteModel\fP \fBdeleteModel\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final long \fBserialVersionUID\fP = 1L"
.br
.ti -1c
.RI "static final Logger \fBlog\fP = Logger\&.getLogger(DeleteActionPanel\&.class)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 13 of file DeleteActionPanel\&.java\&.
.SH "Member Function Documentation"
.PP 
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.acceptButtonClickAction (ActionEvente)\fC [virtual]\fP"

.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractFileFolderPanel\fP\&.
.PP
Definition at line 23 of file DeleteActionPanel\&.java\&.
.PP
.nf
                                                       {
        deleteModel = (DeleteModel) CallAction\&.callAction(deleteModel);
         log\&.info('Updating panel after run');
         updatePanelDataAfterAction();      
         log\&.info('Done updating panel after run');

    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.updatePanelData (\fBGenericActionModel\fPactionModel)\fC [virtual]\fP"
Update the panel before action is taken using the given action model
.PP
\fBParameters:\fP
.RS 4
\fIactionModel\fP 
.RE
.PP

.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractFileFolderPanel\fP\&.
.PP
Definition at line 31 of file DeleteActionPanel\&.java\&.
.PP
.nf
                                                                {
        if (deleteModel instanceof DeleteModel) {
            this\&.deleteModel= (DeleteModel) deleteModel;
            updatePanelData();
        } else {
            log\&.error('Wrong class');
        }       
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.updatePanelData ()\fC [virtual]\fP"
Update the panel before action is taken 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractFileFolderPanel\fP\&.
.PP
Definition at line 41 of file DeleteActionPanel\&.java\&.
.PP
.nf
                                  {
        setActionString('');
        getFileListPanel()\&.removeAll();
        HashMap<String,String> fileListData = this\&.deleteModel\&.getFileListData();
        HashMap<String,String> folderListData = this\&.deleteModel\&.getFolderListData();
        if (fileListData\&.size() > 1 || folderListData\&.size()>1) {
            setActionString('The following files/folders will be deleted');
        } else if (fileListData\&.size() == 0 && folderListData\&.size()==0) {
            setActionString('');
        } else {
            setActionString('The following file/folder will be deleted');
        }

        getActionLabelFile()\&.setText(getActionString());

        for (String file : fileListData\&.keySet()) {
            JLabel jLabel = createDefaultObjectLabel(file, FileKommander\&.FILE);
            getFileListPanel()\&.add(jLabel);
        }
        for (String folder : folderListData\&.keySet()) {
            JLabel jLabel = createDefaultObjectLabel(folder,
                    FileKommander\&.DIRECTORY);
            getFileListPanel()\&.add(jLabel);
        }
        if (fileListData\&.size() == 0 &&(folderListData\&.size() == 0)) {
            getFilepanel()\&.setVisible(false);
        } else {
            getFilepanel()\&.setVisible(true); 
        }
        this\&.paintAll(this\&.getGraphics());        
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.updatePanelDataAfterAction ()\fC [virtual]\fP"
updates the create panel after the action is run 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractFileFolderPanel\fP\&.
.PP
Definition at line 74 of file DeleteActionPanel\&.java\&.
.PP
.nf
                                             {

        if(!this\&.deleteModel\&.isModelRun()){
            log\&.error('Action has not yet been run');
        }
        
        setActionString('');
        getFileListPanel()\&.removeAll();
        HashMap<String,String> fileListData = this\&.deleteModel\&.getFileListData();
        HashMap<String,String> folderListData = this\&.deleteModel\&.getFolderListData();
        
        getActionLabelFile()\&.setText(getActionString());
        for (String file : fileListData\&.keySet()) {
            JLabel jLabel = createObjectLabelAfterAction(file, FileKommander\&.FILE,fileListData\&.get(file));
            fileListPanel\&.add(jLabel);
        }
        for (String folder : folderListData\&.keySet()) {
            String error =folderListData\&.get(folder);
            JLabel jLabel = createObjectLabelAfterAction(folder, FileKommander\&.DIRECTORY,error);
            fileListPanel\&.add(jLabel);
        }
        if (fileListData\&.size() == 0 && folderListData\&.size()==0) {
            getActionLabelFile()\&.setText('');
            getFilepanel()\&.setVisible(false);
        } else {
            getActionLabelFile()\&.setText('Created the following files/folders');
            getFilepanel()\&.setVisible(true);
        }
        this\&.repaint();      
    }
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBDeleteModel\fP com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.deleteModel\fC [private]\fP"

.PP
Definition at line 19 of file DeleteActionPanel\&.java\&.
.SS "final Logger com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.log = Logger\&.getLogger(DeleteActionPanel\&.class)\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 20 of file DeleteActionPanel\&.java\&.
.SS "final long com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.DeleteActionPanel\&.serialVersionUID = 1L\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 18 of file DeleteActionPanel\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for FileKommander from the source code\&.
