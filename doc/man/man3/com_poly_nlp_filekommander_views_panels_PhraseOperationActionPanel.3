.TH "com.poly.nlp.filekommander.views.panels.PhraseOperationActionPanel" 3 "Thu Dec 20 2012" "Version 0.001" "FileKommander" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.poly.nlp.filekommander.views.panels.PhraseOperationActionPanel \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPhraseOperationActionPanel\fP ()"
.br
.ti -1c
.RI "void \fBupdatePanelData\fP (\fBGenericActionModel\fP \fBmodel\fP)"
.br
.ti -1c
.RI "void \fBupdatePanelData\fP ()"
.br
.ti -1c
.RI "void \fBupdatePanelDataAfterAction\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBPhraseOperationModel\fP \fBmodel\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final long \fBserialVersionUID\fP = 1L"
.br
.ti -1c
.RI "static final Logger \fBlog\fP = Logger\&.getLogger(PhraseOperationActionPanel\&.class)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 25 of file PhraseOperationActionPanel\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.PhraseOperationActionPanel ()"
Create the panel\&. 
.PP
Definition at line 34 of file PhraseOperationActionPanel\&.java\&.
.PP
.nf
                                        {
        super();
//      SpringLayout springLayout = new SpringLayout();
//      setLayout(springLayout);
//
//      setMessagePanel(new JPanel());
//      springLayout\&.putConstraint(SpringLayout\&.NORTH, getMessagePanel(), 0, SpringLayout\&.NORTH, this);
//      springLayout\&.putConstraint(SpringLayout\&.EAST, getMessagePanel(), 0,
//              SpringLayout\&.EAST, this);
//      getMessagePanel()\&.setAutoscrolls(true);
//      add(getMessagePanel());
//      getMessagePanel()\&.setLayout(null);
//          setCommandPanel(new JPanel());
//          springLayout\&.putConstraint(SpringLayout\&.WEST, getMessagePanel(), 0, SpringLayout\&.WEST, getCommandPanel());
//          springLayout\&.putConstraint(SpringLayout\&.SOUTH, getMessagePanel(), -6, SpringLayout\&.NORTH, getCommandPanel());
//              
//              setTable(new JTable());
//              getTable()\&.setBorder(new BevelBorder(BevelBorder\&.RAISED, null, null, null, null));
//              getTable()\&.setBounds(386, 217, -324, -173);
//              getMessagePanel()\&.add(getTable());
//              springLayout\&.putConstraint(SpringLayout\&.WEST, getCommandPanel(), 0, SpringLayout\&.WEST, this);
//              springLayout\&.putConstraint(SpringLayout\&.SOUTH, getCommandPanel(), 0, SpringLayout\&.SOUTH, this);
//              springLayout\&.putConstraint(SpringLayout\&.EAST, getCommandPanel(), 0, SpringLayout\&.EAST, this);
//              springLayout\&.putConstraint(SpringLayout\&.NORTH, getCommandPanel(), -40, SpringLayout\&.SOUTH, this);
//              add(getCommandPanel());
//              
//              setBtnClear(new JButton(''));
//              getBtnClear()\&.setFocusPainted(false);
//              getBtnClear()\&.setMargin(new Insets(0, 0, 0, 0));
//              getBtnClear()\&.setContentAreaFilled(false);
//              getBtnClear()\&.setBorderPainted(true);
//              getBtnClear()\&.setOpaque(true);
//              getBtnClear()\&.setIcon(new ImageIcon(CreateActionPanel\&.class\&.getResource('/com/poly/nlp/filekommander/views/icon/reject\&.png')));
//              getCommandPanel()\&.add(getBtnClear());
    }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.updatePanelData (\fBGenericActionModel\fPactionModel)\fC [virtual]\fP"
Update the panel before action is taken using the given action model
.PP
\fBParameters:\fP
.RS 4
\fIactionModel\fP 
.RE
.PP

.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.PP
Definition at line 70 of file PhraseOperationActionPanel\&.java\&.
.PP
.nf
                                                          {
        if(model instanceof PhraseOperationModel){
        this\&.model = (PhraseOperationModel)model;    
        updatePanelData();
        }else{
            log\&.error('Wrong class');
        }
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.updatePanelData ()\fC [virtual]\fP"
Update the panel before action is taken 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.PP
Definition at line 79 of file PhraseOperationActionPanel\&.java\&.
.PP
.nf
                                  {
        getMessagePanel()\&.removeAll();
        HashMap<String, String> fileListData = this\&.model\&.getFileListData();
        
        if (fileListData\&.size() > 1) {
            setActionString('The details for the following files/folders will be shown');
        } else if (fileListData\&.size() == 0) {
            setActionString('');
        } else {
            setActionString('The details for the following file/folder will be shown');
        }
        // model done twice TODO remove 
        DefaultTableModel model = new DefaultTableModel();     
        setTable(new JTable(model));     
        getTable()\&.setModel(new DefaultTableModel());    
        
        Set<String> keySet = fileListData\&.keySet();
        Iterator<String> iterator = keySet\&.iterator();
        
        while(iterator\&.hasNext())
        {   
            String key = iterator\&.next();
            String value= fileListData\&.get(key);
            
            String [] data = new String[2];
            data[0] = key;
            data[1]= value;
            model\&.addRow(data); //Adds Row to JTable
        }
        getMessagePanel()\&.setVisible(true);
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.updatePanelDataAfterAction ()\fC [virtual]\fP"
updates the create panel after the action is run 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.PP
Definition at line 120 of file PhraseOperationActionPanel\&.java\&.
.PP
.nf
                                             {
        // TODO Auto-generated method stub
        
    }
.fi
.SH "Member Data Documentation"
.PP 
.SS "final Logger com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.log = Logger\&.getLogger(PhraseOperationActionPanel\&.class)\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 29 of file PhraseOperationActionPanel\&.java\&.
.SS "\fBPhraseOperationModel\fP com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.model\fC [private]\fP"

.PP
Definition at line 28 of file PhraseOperationActionPanel\&.java\&.
.SS "final long com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\&.serialVersionUID = 1L\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 27 of file PhraseOperationActionPanel\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for FileKommander from the source code\&.
