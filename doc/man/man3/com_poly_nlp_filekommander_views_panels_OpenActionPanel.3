.TH "com.poly.nlp.filekommander.views.panels.OpenActionPanel" 3 "Sat Dec 22 2012" "Version 0.001" "FileKommander" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.poly.nlp.filekommander.views.panels.OpenActionPanel \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOpenActionPanel\fP ()"
.br
.ti -1c
.RI "void \fBupdatePanelData\fP (\fBGenericActionModel\fP \fBmodel\fP)"
.br
.ti -1c
.RI "void \fBupdatePanelData\fP ()"
.br
.ti -1c
.RI "void \fBupdatePanelDataAfterAction\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBOpenModel\fP \fBmodel\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final long \fBserialVersionUID\fP = 1L"
.br
.ti -1c
.RI "static final Logger \fBlog\fP = Logger\&.getLogger(OpenActionPanel\&.class)"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 30 of file OpenActionPanel\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.OpenActionPanel ()"
Create the panel\&. 
.PP
Definition at line 41 of file OpenActionPanel\&.java\&.
.PP
.nf
                             {
        super();    
    }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.updatePanelData (\fBGenericActionModel\fPactionModel)\fC [virtual]\fP"
Update the panel before action is taken using the given action model
.PP
\fBParameters:\fP
.RS 4
\fIactionModel\fP 
.RE
.PP

.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.PP
Definition at line 45 of file OpenActionPanel\&.java\&.
.PP
.nf
                                                          {
        if(model instanceof OpenModel){
        this\&.model = (OpenModel)model;   
        updatePanelData();
        }else{
            log\&.error('Wrong class');
        }
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.updatePanelData ()\fC [virtual]\fP"
Update the panel before action is taken 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.PP
Definition at line 54 of file OpenActionPanel\&.java\&.
.PP
.nf
                                  {
        getMessagePanel()\&.removeAll();
        model = (OpenModel) CallAction\&.callAction(model);
        HashMap<String, String> fileListData = this\&.model\&.getFileListData();
        HashMap<String, String> folderListData= this\&.model\&.getFolderListData();
        
        if (fileListData\&.size() > 1) {
            setActionString('The details for the following files/folders will be shown');
        } else if (fileListData\&.size() == 0) {
            setActionString('');
        } else {
            setActionString('The details for the following file/folder will be shown');
        }
        getActionLabel()\&.setText(getActionString());

        
        Set<String> col = fileListData\&.keySet();
        Iterator<String> iterator = col\&.iterator();
        
        while(iterator\&.hasNext())
        {   
            String key = iterator\&.next();
            String value= fileListData\&.get(key);
            
            String [] data = new String[2];
            data[0] = key;
            data[0]= value;
            getMessagePanel()\&.add(createDefaultMessageRow(data));
        }       
        
        Set<String> folder = folderListData\&.keySet();
        Iterator<String> iterator2 = folder\&.iterator();
        
        while(iterator2\&.hasNext())
        {   
            String key = iterator2\&.next();
            String value= folderListData\&.get(key);
            
            String [] data = new String[2];
            data[0] = key;
            data[0]= value;
            getMessagePanel()\&.add(createDefaultMessageRow(data));
        }
        this\&.paintAll(this\&.getGraphics());        
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.updatePanelDataAfterAction ()\fC [virtual]\fP"
updates the create panel after the action is run 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\fP\&.
.PP
Definition at line 101 of file OpenActionPanel\&.java\&.
.PP
.nf
                                             {
        // TODO Auto-generated method stub
        
    }
.fi
.SH "Member Data Documentation"
.PP 
.SS "final Logger com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.log = Logger\&.getLogger(OpenActionPanel\&.class)\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 36 of file OpenActionPanel\&.java\&.
.SS "\fBOpenModel\fP com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.model\fC [private]\fP"

.PP
Definition at line 35 of file OpenActionPanel\&.java\&.
.SS "final long com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\&.serialVersionUID = 1L\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 32 of file OpenActionPanel\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for FileKommander from the source code\&.
