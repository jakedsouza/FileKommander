.TH "com.poly.nlp.filekommander.views.FileKommanderGUI" 3 "Sat Dec 22 2012" "Version 0.001" "FileKommander" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.poly.nlp.filekommander.views.FileKommanderGUI \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits JFrame\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFileKommanderGUI\fP ()"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBmain\fP (String args[])"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitComponents\fP ()"
.br
.ti -1c
.RI "void \fBjButton1ActionPerformed\fP (java\&.awt\&.event\&.ActionEvent evt)"
.br
.ti -1c
.RI "void \fBjButton1MouseClicked\fP (java\&.awt\&.event\&.MouseEvent evt)"
.br
.ti -1c
.RI "void \fBjTextField1ActionPerformed\fP (java\&.awt\&.event\&.ActionEvent evt)"
.br
.ti -1c
.RI "void \fBjButton1KeyPressed\fP (java\&.awt\&.event\&.KeyEvent evt)"
.br
.ti -1c
.RI "void \fBformKeyPressed\fP (java\&.awt\&.event\&.KeyEvent evt)"
.br
.ti -1c
.RI "void \fBjTextField1KeyPressed\fP (java\&.awt\&.event\&.KeyEvent evt)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "javax\&.swing\&.JButton \fBjButton1\fP"
.br
.ti -1c
.RI "javax\&.swing\&.JLabel \fBjLabel2\fP"
.br
.ti -1c
.RI "javax\&.swing\&.JTextField \fBjTextField1\fP"
.br
.ti -1c
.RI "javax\&.swing\&.JTextField \fBjTextField2\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final long \fBserialVersionUID\fP = 1845283654991777565L"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBAuthor:\fP
.RS 4
Neha 
.RE
.PP

.PP
Definition at line 9 of file FileKommanderGUI\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.FileKommanderGUI ()"
Creates new form \fBFileKommanderGUI\fP 
.PP
Definition at line 18 of file FileKommanderGUI\&.java\&.
.PP
.nf
                              {
        setIconImage(Toolkit\&.getDefaultToolkit()\&.getImage('C:\\Users\\jake\\Documents\\GitHub\\FileKommander\\icon\&.png'));
        initComponents();
    }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.formKeyPressed (java\&.awt\&.event\&.KeyEventevt)\fC [private]\fP"

.PP
Definition at line 140 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                                             {
    int key = evt\&.getKeyCode();

        if (key == java\&.awt\&.event\&.KeyEvent\&.VK_ENTER) {
        jLabel2\&.setText('enter captured \&.\&.\&.');
    }
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.initComponents ()\fC [private]\fP"
This method is called from within the constructor to initialize the form\&. WARNING: Do NOT modify this code\&. The content of this method is always regenerated by the Form Editor\&. 
.PP
Definition at line 30 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                  {

        jTextField2 = new javax\&.swing\&.JTextField();
        jTextField1 = new javax\&.swing\&.JTextField();
        jButton1 = new javax\&.swing\&.JButton();
        jLabel2 = new javax\&.swing\&.JLabel();

        jTextField2\&.setText('jTextField2');

        setDefaultCloseOperation(javax\&.swing\&.WindowConstants\&.EXIT_ON_CLOSE);
        addKeyListener(new java\&.awt\&.event\&.KeyAdapter() {
            public void keyPressed(java\&.awt\&.event\&.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jTextField1\&.setText('Enter your text here !');
        jTextField1\&.setToolTipText('');
        jTextField1\&.setBorder(new javax\&.swing\&.border\&.SoftBevelBorder(javax\&.swing\&.border\&.BevelBorder\&.RAISED));
        jTextField1\&.setMargin(new java\&.awt\&.Insets(0, 0, 0, 0));
        jTextField1\&.addActionListener(new java\&.awt\&.event\&.ActionListener() {
            public void actionPerformed(java\&.awt\&.event\&.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1\&.addKeyListener(new java\&.awt\&.event\&.KeyAdapter() {
            public void keyPressed(java\&.awt\&.event\&.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1\&.setText('Submit');
        jButton1\&.addMouseListener(new java\&.awt\&.event\&.MouseAdapter() {
            public void mouseClicked(java\&.awt\&.event\&.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1\&.addActionListener(new java\&.awt\&.event\&.ActionListener() {
            public void actionPerformed(java\&.awt\&.event\&.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1\&.addKeyListener(new java\&.awt\&.event\&.KeyAdapter() {
            public void keyPressed(java\&.awt\&.event\&.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });

        jLabel2\&.setToolTipText('label');

        javax\&.swing\&.GroupLayout layout = new javax\&.swing\&.GroupLayout(getContentPane());
        getContentPane()\&.setLayout(layout);
        layout\&.setHorizontalGroup(
            layout\&.createParallelGroup(javax\&.swing\&.GroupLayout\&.Alignment\&.LEADING)
            \&.addGroup(layout\&.createSequentialGroup()
                \&.addContainerGap()
                \&.addGroup(layout\&.createParallelGroup(javax\&.swing\&.GroupLayout\&.Alignment\&.LEADING)
                    \&.addGroup(javax\&.swing\&.GroupLayout\&.Alignment\&.TRAILING, layout\&.createSequentialGroup()
                        \&.addGap(0, 0, Short\&.MAX_VALUE)
                        \&.addComponent(jLabel2)
                        \&.addGap(225, 225, 225))
                    \&.addGroup(javax\&.swing\&.GroupLayout\&.Alignment\&.TRAILING, layout\&.createSequentialGroup()
                        \&.addComponent(jTextField1, javax\&.swing\&.GroupLayout\&.DEFAULT_SIZE, 207, Short\&.MAX_VALUE)
                        \&.addPreferredGap(javax\&.swing\&.LayoutStyle\&.ComponentPlacement\&.RELATED)
                        \&.addComponent(jButton1)
                        \&.addGap(88, 88, 88))))
        );
        layout\&.setVerticalGroup(
            layout\&.createParallelGroup(javax\&.swing\&.GroupLayout\&.Alignment\&.LEADING)
            \&.addGroup(layout\&.createSequentialGroup()
                \&.addContainerGap()
                \&.addGroup(layout\&.createParallelGroup(javax\&.swing\&.GroupLayout\&.Alignment\&.LEADING, false)
                    \&.addComponent(jButton1, javax\&.swing\&.GroupLayout\&.DEFAULT_SIZE, javax\&.swing\&.GroupLayout\&.DEFAULT_SIZE, Short\&.MAX_VALUE)
                    \&.addComponent(jTextField1))
                \&.addPreferredGap(javax\&.swing\&.LayoutStyle\&.ComponentPlacement\&.RELATED, javax\&.swing\&.GroupLayout\&.DEFAULT_SIZE, Short\&.MAX_VALUE)
                \&.addComponent(jLabel2)
                \&.addGap(60, 60, 60))
        );

        jTextField1\&.getAccessibleContext()\&.setAccessibleDescription('`');
        jLabel2\&.getAccessibleContext()\&.setAccessibleDescription('');

        pack();
    }// </editor-fold>
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jButton1ActionPerformed (java\&.awt\&.event\&.ActionEventevt)\fC [private]\fP"

.PP
Definition at line 115 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                                                         {                                         
        // TODO add your handling code here:
        jLabel2\&.setText('Hello '+jTextField1\&.getText()+'\&.\&.!');
        
    }                                        
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jButton1KeyPressed (java\&.awt\&.event\&.KeyEventevt)\fC [private]\fP"

.PP
Definition at line 130 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                                                 {
        // TODO add your handling code here:
        
//    int key = evt\&.getKeyCode();
//    System\&.out\&.println('key is \&.\&. '+key);
//    if (key == java\&.awt\&.event\&.KeyEvent\&.VK_ENTER) {
//        jLabel2\&.setText('enter captured \&.\&.\&.');
//    }
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jButton1MouseClicked (java\&.awt\&.event\&.MouseEventevt)\fC [private]\fP"

.PP
Definition at line 121 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                                                     {                                      
        // TODO add your handling code here:
         jLabel2\&.setText('Hello '+jTextField1\&.getText()+'\&.\&.\&. !');
    }                                     
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jTextField1ActionPerformed (java\&.awt\&.event\&.ActionEventevt)\fC [private]\fP"

.PP
Definition at line 126 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                                                            {                                            
        // TODO add your handling code here:
    }                                           
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jTextField1KeyPressed (java\&.awt\&.event\&.KeyEventevt)\fC [private]\fP"

.PP
Definition at line 148 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                                                    {
        int key = evt\&.getKeyCode();
        if (key == java\&.awt\&.event\&.KeyEvent\&.VK_ENTER) {
            jLabel2\&.setText('enter captured \&.\&.\&.');
        }
    }
.fi
.SS "static void com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.main (Stringargs[])\fC [static]\fP"
\fBParameters:\fP
.RS 4
\fIargs\fP the command line arguments 
.RE
.PP

.PP
Definition at line 158 of file FileKommanderGUI\&.java\&.
.PP
.nf
                                           {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate='collapsed' desc=' Look and feel setting code (optional) '>
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel\&.
         * For details see http://download\&.oracle\&.com/javase/tutorial/uiswing/lookandfeel/plaf\&.html 
         */
        try {
            for (javax\&.swing\&.UIManager\&.LookAndFeelInfo info : javax\&.swing\&.UIManager\&.getInstalledLookAndFeels()) {
                if ('Nimbus'\&.equals(info\&.getName())) {
                    javax\&.swing\&.UIManager\&.setLookAndFeel(info\&.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java\&.util\&.logging\&.Logger\&.getLogger(FileKommanderGUI\&.class\&.getName())\&.log(java\&.util\&.logging\&.Level\&.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java\&.util\&.logging\&.Logger\&.getLogger(FileKommanderGUI\&.class\&.getName())\&.log(java\&.util\&.logging\&.Level\&.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java\&.util\&.logging\&.Logger\&.getLogger(FileKommanderGUI\&.class\&.getName())\&.log(java\&.util\&.logging\&.Level\&.SEVERE, null, ex);
        } catch (javax\&.swing\&.UnsupportedLookAndFeelException ex) {
            java\&.util\&.logging\&.Logger\&.getLogger(FileKommanderGUI\&.class\&.getName())\&.log(java\&.util\&.logging\&.Level\&.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java\&.awt\&.EventQueue\&.invokeLater(new Runnable() {
            public void run() {
                new FileKommanderGUI()\&.setVisible(true);
            }
        });
        
    }
.fi
.SH "Member Data Documentation"
.PP 
.SS "javax\&.swing\&.JButton com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jButton1\fC [private]\fP"

.PP
Definition at line 193 of file FileKommanderGUI\&.java\&.
.SS "javax\&.swing\&.JLabel com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jLabel2\fC [private]\fP"

.PP
Definition at line 196 of file FileKommanderGUI\&.java\&.
.SS "javax\&.swing\&.JTextField com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jTextField1\fC [private]\fP"

.PP
Definition at line 199 of file FileKommanderGUI\&.java\&.
.SS "javax\&.swing\&.JTextField com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.jTextField2\fC [private]\fP"

.PP
Definition at line 202 of file FileKommanderGUI\&.java\&.
.SS "final long com\&.poly\&.nlp\&.filekommander\&.views\&.FileKommanderGUI\&.serialVersionUID = 1845283654991777565L\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 14 of file FileKommanderGUI\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for FileKommander from the source code\&.
