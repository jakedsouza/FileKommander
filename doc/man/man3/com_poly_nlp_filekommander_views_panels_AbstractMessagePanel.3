.TH "com.poly.nlp.filekommander.views.panels.AbstractMessagePanel" 3 "Sat Dec 22 2012" "Version 0.001" "FileKommander" \" -*- nroff -*-
.ad l
.nh
.SH NAME
com.poly.nlp.filekommander.views.panels.AbstractMessagePanel \- 
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.GenericPanel\fP\&.
.PP
Inherited by \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.ExistActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\fP, and \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.StatsActionPanel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAbstractMessagePanel\fP ()"
.br
.ti -1c
.RI "void \fBresetPanel\fP ()"
.br
.ti -1c
.RI "void \fBsetActionString\fP (String \fBactionString\fP)"
.br
.ti -1c
.RI "String \fBgetActionString\fP ()"
.br
.ti -1c
.RI "JPanel \fBgetMessagePanel\fP ()"
.br
.ti -1c
.RI "void \fBsetMessagePanel\fP (JPanel \fBmessagePanel\fP)"
.br
.ti -1c
.RI "JPanel \fBgetCommandPanel\fP ()"
.br
.ti -1c
.RI "void \fBsetCommandPanel\fP (JPanel \fBcommandPanel\fP)"
.br
.ti -1c
.RI "void \fBsetTable\fP (JTable table)"
.br
.ti -1c
.RI "JButton \fBgetBtnClear\fP ()"
.br
.ti -1c
.RI "void \fBsetBtnClear\fP (JButton \fBbtnClear\fP)"
.br
.ti -1c
.RI "abstract void \fBupdatePanelData\fP (\fBGenericActionModel\fP model)"
.br
.ti -1c
.RI "abstract void \fBupdatePanelData\fP ()"
.br
.ti -1c
.RI "abstract void \fBupdatePanelDataAfterAction\fP ()"
.br
.ti -1c
.RI "JLabel \fBgetActionLabel\fP ()"
.br
.ti -1c
.RI "void \fBsetActionLabel\fP (JLabel \fBactionLabel\fP)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "JPanel \fBcreateDefaultMessageRow\fP (String[] row)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "JLabel \fBcreateDefaultObjectLabel\fP (String labelText, int type)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "String \fBactionString\fP"
.br
.ti -1c
.RI "JPanel \fBcommandPanel\fP"
.br
.ti -1c
.RI "JButton \fBbtnClear\fP"
.br
.ti -1c
.RI "JLabel \fBactionLabel\fP"
.br
.ti -1c
.RI "JPanel \fBmessagePanel\fP"
.br
.in -1c
.SS "Static Private Attributes"

.in +1c
.ti -1c
.RI "static final long \fBserialVersionUID\fP = 1L"
.br
.ti -1c
.RI "static final Logger \fBlog\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 23 of file AbstractMessagePanel\&.java\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.AbstractMessagePanel ()"
Create the panel\&. 
.PP
Definition at line 47 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                  {
        SpringLayout springLayout = new SpringLayout();
        setLayout(springLayout);
        setCommandPanel(new JPanel());
        springLayout\&.putConstraint(SpringLayout\&.WEST, getCommandPanel(), 0,
                SpringLayout\&.WEST, this);
        springLayout\&.putConstraint(SpringLayout\&.SOUTH, getCommandPanel(), 0,
                SpringLayout\&.SOUTH, this);
        springLayout\&.putConstraint(SpringLayout\&.EAST, getCommandPanel(), 0,
                SpringLayout\&.EAST, this);
        springLayout\&.putConstraint(SpringLayout\&.NORTH, getCommandPanel(), -40,
                SpringLayout\&.SOUTH, this);
        add(getCommandPanel());
        {
            setBtnClear(new JButton('Clear'));
            commandPanel\&.add(getBtnClear());
        }
        
        setActionLabel(new JLabel(''));
        springLayout\&.putConstraint(SpringLayout\&.NORTH, actionLabel, 10, SpringLayout\&.NORTH, this);
        springLayout\&.putConstraint(SpringLayout\&.WEST, actionLabel, 0, SpringLayout\&.WEST, this);
        springLayout\&.putConstraint(SpringLayout\&.EAST, actionLabel, 0, SpringLayout\&.EAST, commandPanel);
        add(getActionLabel());
                
        messagePanel = new JPanel();
        springLayout\&.putConstraint(SpringLayout\&.SOUTH, actionLabel, -15, SpringLayout\&.NORTH, messagePanel);
        springLayout\&.putConstraint(SpringLayout\&.WEST, messagePanel, 10, SpringLayout\&.WEST, commandPanel);
        messagePanel\&.setAutoscrolls(true);
                springLayout\&.putConstraint(SpringLayout\&.NORTH, messagePanel, 39, SpringLayout\&.NORTH, this);
                springLayout\&.putConstraint(SpringLayout\&.SOUTH, messagePanel, -6, SpringLayout\&.NORTH, commandPanel);
                springLayout\&.putConstraint(SpringLayout\&.EAST, messagePanel, 440, SpringLayout\&.WEST, this);
                add(messagePanel);
                messagePanel\&.setLayout(new FlowLayout(FlowLayout\&.CENTER, 5, 5));
                btnClear\&.addActionListener(new ActionListener() {
                    public void actionPerformed(ActionEvent e) {
                        resetPanel();
                    }
                });                 
    }
.fi
.SH "Member Function Documentation"
.PP 
.SS "JPanel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.createDefaultMessageRow (String[]row)\fC [protected]\fP"

.PP
Definition at line 87 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                                           {
        JPanel jPanel = new JPanel();
        jPanel\&.setAutoscrolls(true);
        for (String data : row) {
            JLabel jLabel = new JLabel(data);
        
            jPanel\&.add(jLabel);
        }
        //jPanel\&.setBorder(new LineBorder(new Color(0, 0, 0)));

        return jPanel;
        
    }
.fi
.SS "JLabel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.createDefaultObjectLabel (StringlabelText, inttype)\fC [private]\fP"

.PP
Definition at line 101 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                                                        {
        JLabel lblNewLabel = new JLabel(labelText);
        lblNewLabel\&.setForeground(new Color(0, 0, 0));
        if (type == FileKommander\&.FILE) {
            lblNewLabel
                    \&.setIcon(new ImageIcon(
                            CreateActionPanel\&.class
                                    \&.getResource('/com/poly/nlp/filekommander/views/icon/file\&.png')));
        } else if (type == FileKommander\&.DIRECTORY) {
            lblNewLabel
                    \&.setIcon(new ImageIcon(
                            CreateActionPanel\&.class
                                    \&.getResource('/com/poly/nlp/filekommander/views/icon/folder\&.png')));
        }
        return lblNewLabel;
    }
.fi
.SS "JLabel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.getActionLabel ()"
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 195 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                   {
        return actionLabel;
    }
.fi
.SS "String com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.getActionString ()"
\fBReturns:\fP
.RS 4
the actionString 
.RE
.PP

.PP
Definition at line 133 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                    {
        return actionString;
    }
.fi
.SS "JButton com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.getBtnClear ()"
\fBReturns:\fP
.RS 4
the btnClear 
.RE
.PP

.PP
Definition at line 175 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                 {
        return btnClear;
    }
.fi
.SS "JPanel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.getCommandPanel ()"
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 153 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                    {
        return commandPanel;
    }
.fi
.SS "JPanel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.getMessagePanel ()"
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 140 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                    {
        return messagePanel;
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.resetPanel ()\fC [virtual]\fP"
Resets the panel to default state 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.GenericPanel\fP\&.
.PP
Definition at line 118 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                             {
        this\&.updatePanelData();
        FileKommanderRun\&.getGuiv2()\&.reset();
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.setActionLabel (JLabelactionLabel)"
\fBParameters:\fP
.RS 4
\fIactionLabel\fP the actionLabel to set 
.RE
.PP

.PP
Definition at line 202 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                                   {
        this\&.actionLabel = actionLabel;
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.setActionString (StringactionString)"
\fBParameters:\fP
.RS 4
\fIactionString\fP the actionString to set 
.RE
.PP

.PP
Definition at line 126 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                                     {
        this\&.actionString = actionString;
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.setBtnClear (JButtonbtnClear)"
\fBParameters:\fP
.RS 4
\fIbtnClear\fP the btnClear to set 
.RE
.PP

.PP
Definition at line 182 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                              {
        this\&.btnClear = btnClear;

    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.setCommandPanel (JPanelcommandPanel)"
\fBParameters:\fP
.RS 4
\fIcommandPanel\fP the commandPanel to set 
.RE
.PP

.PP
Definition at line 160 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                                     {
        this\&.commandPanel = commandPanel;
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.setMessagePanel (JPanelmessagePanel)"
\fBParameters:\fP
.RS 4
\fImessagePanel\fP the messagePanel to set 
.RE
.PP

.PP
Definition at line 146 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                                     {
        this\&.messagePanel = messagePanel ;
    }
.fi
.SS "void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.setTable (JTabletable)"
\fBParameters:\fP
.RS 4
\fItable\fP the table to set 
.RE
.PP

.PP
Definition at line 167 of file AbstractMessagePanel\&.java\&.
.PP
.nf
                                       {
        messagePanel\&.setLayout(null);

    }
.fi
.SS "abstract void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.updatePanelData (\fBGenericActionModel\fPactionModel)\fC [pure virtual]\fP"
Update the panel before action is taken using the given action model
.PP
\fBParameters:\fP
.RS 4
\fIactionModel\fP 
.RE
.PP

.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.GenericPanel\fP\&.
.PP
Implemented in \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.ExistActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.StatsActionPanel\fP, and \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\fP\&.
.SS "abstract void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.updatePanelData ()\fC [pure virtual]\fP"
Update the panel before action is taken 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.GenericPanel\fP\&.
.PP
Implemented in \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.ExistActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.StatsActionPanel\fP, and \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\fP\&.
.SS "abstract void com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.updatePanelDataAfterAction ()\fC [pure virtual]\fP"
updates the create panel after the action is run 
.PP
Implements \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.GenericPanel\fP\&.
.PP
Implemented in \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.ExistActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.OpenActionPanel\fP, \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.StatsActionPanel\fP, and \fBcom\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.PhraseOperationActionPanel\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "JLabel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.actionLabel\fC [private]\fP"

.PP
Definition at line 39 of file AbstractMessagePanel\&.java\&.
.SS "String com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.actionString\fC [private]\fP"

.PP
Definition at line 28 of file AbstractMessagePanel\&.java\&.
.SS "JButton com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.btnClear\fC [private]\fP"

.PP
Definition at line 36 of file AbstractMessagePanel\&.java\&.
.SS "JPanel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.commandPanel\fC [private]\fP"

.PP
Definition at line 31 of file AbstractMessagePanel\&.java\&.
.SS "final Logger com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.log\fC [static]\fP, \fC [private]\fP"
\fBInitial value:\fP
.PP
.nf
= Logger
            \&.getLogger(AbstractMessagePanel\&.class)
.fi
.PP
Definition at line 32 of file AbstractMessagePanel\&.java\&.
.SS "JPanel com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.messagePanel\fC [private]\fP"

.PP
Definition at line 42 of file AbstractMessagePanel\&.java\&.
.SS "final long com\&.poly\&.nlp\&.filekommander\&.views\&.panels\&.AbstractMessagePanel\&.serialVersionUID = 1L\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 25 of file AbstractMessagePanel\&.java\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for FileKommander from the source code\&.
