/*
*  preprocessing2.jape
*
*
* The Phase recognises various actions 
*/

Phase: preprocessing2
Input: Lookup 
Options:debug = true  


Rule: Actions
(
{Lookup.majorType==action}
):action

--> 
:action
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("action");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","Actions");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"action", newFeatures);
  }
 

/* - create action */


Rule: CreateAction
(
{Lookup.minorType ==create}
):createAction

--> 
:createAction
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("createAction");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","CreateAction");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"createAction", newFeatures);
  }
 
/* - delete something */


Rule: Preprocess1a
(
{Lookup.minorType ==delete}
):deleteAction

--> 
:deleteAction
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("deleteAction");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","Preprocess1a");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"deleteAction", newFeatures);
  }

/* - exists someting question */


Rule: ExistsAction
(
{Lookup.minorType ==exist}
):existAction

--> 
:existAction
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("existAction");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","ExistsAction");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"existAction", newFeatures);
  }

/* - insert */


Rule: InsertAction
(
{Lookup.minorType ==insert}
):insertAction

--> 
:insertAction
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("insertAction");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","InsertAction");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"insertAction", newFeatures);
  }

/* - acquires, took over */


Rule: RemoveAction
(
{Lookup.minorType ==remove}
):removeAction

--> 
:removeAction
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("removeAction");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","RemoveAction");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"removeAction", newFeatures);
  }

/* - acquires, took over */


Rule: ReplaceAction
(
{Lookup.minorType ==replace}
):replaceAction

--> 
:replaceAction
  {
    gate.AnnotationSet matchedAnns= (gate.AnnotationSet) bindings.get("replaceAction");	
	gate.FeatureMap newFeatures= Factory.newFeatureMap();
	newFeatures.put("rule","ReplaceAction");
	annotations.add(matchedAnns.firstNode(),matchedAnns.lastNode(),"replaceAction", newFeatures);
  }
